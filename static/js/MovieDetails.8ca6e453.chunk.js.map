{"version":3,"file":"static/js/MovieDetails.8ca6e453.chunk.js","mappings":"yMAWA,EARYA,EAAAA,GAAAA,IAAH,+DACLC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,sJCNSC,E,QAAkBN,GAAAA,IAAH,yD,mBCGb,SAASO,EAAT,GAA6C,IAC1D,EADyD,EAAfC,aAOvB,CAAC,EANpB,IACEC,eAAAA,OADF,MACmB,GADnB,MAKEC,YAAAA,OALF,MAKgB,GALhB,EAOA,OACE,+BACE,SAACC,EAAA,EAAD,WACE,SAACL,EAAD,CACEM,MAAM,QACNC,IAAKJ,EACLK,IAAG,0CACe,OAAhBJ,EACI,kCACAA,GAENK,QAAQ,YAKjB,C,cCrBc,SAASC,EAAaC,GACnC,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAsCE,EAAAA,EAAAA,UAAS,CAAC,GAAhD,eAAOZ,EAAP,KAAoBa,EAApB,KACA,GAA4BD,EAAAA,EAAAA,UAASE,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,EAAUF,EAAAA,EAAAA,SADZ,kBAGuBA,EAAAA,EAAAA,mBAAuBJ,GAH9C,OAGUQ,EAHV,OAIIL,EAAeK,GACfF,EAAUF,EAAAA,EAAAA,UALd,gDAQIE,EAAUF,EAAAA,EAAAA,UARd,0DADc,uBAAC,WAAD,wBAadK,EACD,GAAE,CAACT,IAGJU,QAAQC,IAAIN,IAEV,+BACE,6BACE,SAAC,EAAD,CAAkBf,YAAaA,KAC/B,2BACE,yBACE,SAAC,KAAD,CAAMsB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAIJ,SAAC,KAAD,QAIP,C,2GC/CDC,IAAAA,SAAAA,QAAyB,gCAIzB,aAAO,OAAP,oBAAO,2GAAoCC,EAApC,+BAA4C,GAAIC,EAAhD,+BAAuD,EAAvD,SACkBF,IAAAA,IAAA,6BAAgCC,EAAhC,iBAA8CC,IADhE,cACCC,EADD,yBAEEA,EAASR,MAFX,mEAKP,aAAO,OAAP,oBAAO,oGACkBK,IAAAA,IAAA,uBADlB,cACCG,EADD,yBAEEA,EAASR,MAFX,kEAKP,aAAO,OAAP,oBAAO,WAAkCS,GAAlC,uFACkBJ,IAAAA,IAAA,gBAAmBI,IADrC,cACCD,EADD,yBAEEA,EAASR,MAFX,kEAKP,aAAO,OAAP,oBAAO,WAAuCS,GAAvC,uFACkBJ,IAAAA,IAAA,gBAAmBI,EAAnB,aADlB,cACCD,EADD,yBAEEA,EAASR,MAFX,kE,aAKA,O,oBAAA,WAAyCS,GAAzC,uFACkBJ,IAAAA,IAAA,gBAAmBI,EAAnB,aADlB,cACCD,EADD,yBAEEA,EAASR,MAFX,kEAtBPK,IAAAA,SAAAA,OAAwB,CAAEK,QADV,mCAC4BC,SAAU,SAgCtD,IAAMf,EAAM,CACVgB,qBA/BK,WAAP,gCAgCEC,cA3BK,WAAP,gCA4BEC,mBAvBK,SAAP,mCAwBEC,wBAnBK,SAAP,mCAoBEC,0BAfK,SAAP,mCAgBEC,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,OAAQ,SACRC,SAAU,YAGZ,G","sources":["components/Box/Box.js","components/MoviesDetailsCard/MoviesDetailsCard.styled.js","components/MoviesDetailsCard/MoviesDetailsCard.js","pages/MovieDetails/MovieDetails.js","services/themoviedbApiService.js"],"sourcesContent":["import styled from 'styled-components';\nimport { position, space, layout, flexbox, color } from 'styled-system';\n\nconst Box = styled.div`\n  ${position};\n  ${space};\n  ${layout};\n  ${flexbox};\n  ${color};\n`;\n\nexport default Box;\n","import styled from 'styled-components';\n\nexport const StyledMoviesImg = styled.img`\n  width: 100%;\n  height: auto;\n`;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { StyledMoviesImg } from './MoviesDetailsCard.styled';\nimport Box from 'components/Box';\n\nexport default function MoviesDetailsCard({ infoByMovie }) {\n  const {\n    original_title = '',\n    // vote_average = '',\n    // overview = '',\n    // genres = [],\n    poster_path = '',\n  } = infoByMovie || {};\n  return (\n    <>\n      <Box>\n        <StyledMoviesImg\n          width=\"342px\"\n          alt={original_title}\n          src={`https://image.tmdb.org/t/p/w342/${\n            poster_path === null\n              ? 'h5oGodvcoq8cyIDTy79yKn4qbey.jpg'\n              : poster_path\n          }`}\n          loading=\"lazy\"\n        />\n      </Box>\n    </>\n  );\n}\n\nMoviesDetailsCard.propTypes = {};\n","import { useEffect, useState } from 'react';\nimport { Link, useParams, /* useLocation, */ Outlet } from 'react-router-dom';\n// import BackLink from 'components/BackLink';\nimport MovieDetailsCard from 'components/MoviesDetailsCard';\nimport API from 'services';\n\n// import PropTypes from 'prop-types';\n\nexport default function MovieDetails(props) {\n  const { movieId } = useParams();\n  // const location = useLocation();\n  const [infoByMovie, setInfoByMovie] = useState({});\n  const [status, setStatus] = useState(API.IDLE);\n\n  useEffect(() => {\n    async function getMovie() {\n      setStatus(API.PENDING);\n      try {\n        const data = await API.getSearchMovieById(movieId);\n        setInfoByMovie(data);\n        setStatus(API.RESOLVED);\n        // toast.info('Everything is loaded');\n      } catch (error) {\n        setStatus(API.REJECTED);\n        // toast.error('oops :( Something wrong, try again');\n      }\n    }\n    getMovie();\n  }, [movieId]);\n\n  // const backLinkHref = location.state?.from ?? '/movies';\n  console.log(status);\n  return (\n    <>\n      <main>\n        <MovieDetailsCard infoByMovie={infoByMovie} />\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n\n        <Outlet />\n      </main>\n    </>\n  );\n}\n\n// MovieDetails.propTypes = {};\n","// const axios = require('axios');\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd3bb769880d7129a875d091908f7afe1';\naxios.defaults.params = { api_key: API_KEY, language: 'en-US' };\n\nexport async function getSearchMovieResult(query = '', page = 1) {\n  const response = await axios.get(`search/movie?query=${query}&page=${page}`);\n  return response.data;\n}\n\nexport async function getMovieTrend() {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data;\n}\n\nexport async function getSearchMovieById(id) {\n  const response = await axios.get(`movie/${id}`);\n  return response.data;\n}\n\nexport async function getSearchCastsMovieById(id) {\n  const response = await axios.get(`movie/${id}/credits`);\n  return response.data;\n}\n\nexport async function getSearchReviewsMovieById(id) {\n  const response = await axios.get(`movie/${id}/reviews`);\n  return response.data;\n}\n\n// export async function getGenres() {\n//   const { data: genres } = await axios.get(`genre/movie/list`);\n//   return genres;\n// }\n\nconst API = {\n  getSearchMovieResult,\n  getMovieTrend,\n  getSearchMovieById,\n  getSearchCastsMovieById,\n  getSearchReviewsMovieById,\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  LOADED: 'loaded',\n  REJECTED: 'rejected',\n};\n\nexport default API;\n"],"names":["styled","position","space","layout","flexbox","color","StyledMoviesImg","MoviesDetailsCard","infoByMovie","original_title","poster_path","Box","width","alt","src","loading","MovieDetails","props","movieId","useParams","useState","setInfoByMovie","API","status","setStatus","useEffect","data","getMovie","console","log","to","axios","query","page","response","id","api_key","language","getSearchMovieResult","getMovieTrend","getSearchMovieById","getSearchCastsMovieById","getSearchReviewsMovieById","IDLE","PENDING","RESOLVED","LOADED","REJECTED"],"sourceRoot":""}