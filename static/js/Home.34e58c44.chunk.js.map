{"version":3,"file":"static/js/Home.34e58c44.chunk.js","mappings":"gOAEaA,EAA0BC,EAAAA,GAAAA,GAAH,mTAWvBC,EAAaD,EAAAA,GAAAA,IAAH,+E,SCHR,SAASE,EAAT,GAAoD,IAAvBC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,MAIvD,OACE,+BACE,UAACL,EAAD,YACE,SAACE,EAAD,CACEI,MAAM,QACNC,IAAKF,EACLG,IAAG,0CACe,OAAhBJ,EACI,kCACAA,GAENK,QAAQ,UAEV,0BAAOJ,QA2Bd,CCpDM,IAAMK,EAAqBT,EAAAA,GAAAA,GAAH,wRCIhB,SAASU,EAAT,GAA+D,IAAtCC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,YACxCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACL,EAAD,UACGE,EAAOI,KACN,WAEEC,GACI,IAFFC,EAEC,EAFDA,GAAId,EAEH,EAFGA,YAAaC,EAEhB,EAFgBA,MAAOc,EAEvB,EAFuBA,SAAUC,EAEjC,EAFiCA,aAAcC,EAE/C,EAF+CA,UAGlD,OACE,SAAC,KAAD,CAEEC,GAAE,kBAAaJ,GACfK,MAAO,CAAEC,KAAMV,EAAUW,OAAQZ,GAHnC,UAKE,SAACV,EAAD,CACEC,YAAaA,EACbC,MAAOA,EACPc,SAAUA,EACVC,aAAcA,EACdC,UAAWA,KATRJ,EAaV,KAIR,C,yKC5Bc,SAASS,IACtB,OAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA4BF,EAAAA,EAAAA,UAASG,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,EAAUF,EAAAA,EAAAA,SADZ,kBAGuBA,EAAAA,EAAAA,gBAHvB,OAGUI,EAHV,OAIIL,GAAiB,SAAAM,GAAE,wBAAQA,IAAR,OAAeD,EAAKE,SAApB,IACnBJ,EAAUF,EAAAA,EAAAA,UALd,gDAQIE,EAAUF,EAAAA,EAAAA,UARd,0DADc,uBAAC,WAAD,wBAadO,EACD,GAAE,KAGD,gCACGN,IAAWD,EAAAA,EAAAA,UAAe,SAACQ,EAAA,EAAD,IAC1BV,EAAcW,OAAS,IAAK,SAAC5B,EAAA,EAAD,CAAeC,OAAQgB,MAGzD,C","sources":["components/MoviesGallery/MoviesGalleryItem/MoviesGalleryItem.styled.js","components/MoviesGallery/MoviesGalleryItem/MoviesGalleryItem.js","components/MoviesGallery/MoviesGallery.styled.js","components/MoviesGallery/MoviesGallery.js","pages/Home/Home.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledMoviesGalleryItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const MoviesItem = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyledMoviesGalleryItem,\n  MoviesItem,\n} from './MoviesGalleryItem.styled';\n// import Modal from 'components/Modal';\n// import InnerModal from 'components/InnerModal';\n// import useToggleModal from 'hooks/toggleModal/';\n\nexport default function MoviesGalleryItem({ poster_path, title }) {\n  // const { isOpen, openModal, closeModal, handleKeyDown, handleBackdropClick } =\n  // useToggleModal(false);\n\n  return (\n    <>\n      <StyledMoviesGalleryItem>\n        <MoviesItem\n          width=\"342px\"\n          alt={title}\n          src={`https://image.tmdb.org/t/p/w342/${\n            poster_path === null\n              ? 'h5oGodvcoq8cyIDTy79yKn4qbey.jpg'\n              : poster_path\n          }`}\n          loading=\"lazy\"\n        />\n        <span>{title}</span>\n        {/* <br />\n        <span>{vote_average}</span>\n        <br />\n        <span>{genre_ids}</span>\n        <br />\n        <span>{overview}</span>\n        <br /> */}\n      </StyledMoviesGalleryItem>\n\n      {/* {isOpen && (\n        <Modal\n          handleBackdropClick={handleBackdropClick}\n          handleKeyDown={handleKeyDown}\n          closeModal={closeModal}\n        >\n          <InnerModal\n            largeImageURL={`https://image.tmdb.org/t/p/w780/${\n              backdrop_path === null\n                ? '/h5oGodvcoq8cyIDTy79yKn4qbey.jpg'\n                : backdrop_path\n            }`}\n          />\n        </Modal>\n      )} */}\n    </>\n  );\n}\n\nMoviesGalleryItem.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  // number: PropTypes.string.isRequired,\n  // onOpenModal: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const StyledImageGallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(185px, 1fr));\n  grid-gap: 40px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { React } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MoviesGalleryItem from 'components/MoviesGallery/MoviesGalleryItem';\nimport { StyledImageGallery } from './MoviesGallery.styled';\n\nexport default function MoviesGallery({ movies, searchValue /* , page  */ }) {\n  const location = useLocation();\n  return (\n    <StyledImageGallery>\n      {movies.map(\n        (\n          { id, poster_path, title, overview, vote_average, genre_ids },\n          idx\n        ) => {\n          return (\n            <Link\n              key={idx}\n              to={`/movies/${id}`}\n              state={{ from: location, search: searchValue /* , page: page */ }}\n            >\n              <MoviesGalleryItem\n                poster_path={poster_path}\n                title={title}\n                overview={overview}\n                vote_average={vote_average}\n                genre_ids={genre_ids}\n              />\n            </Link>\n          );\n        }\n      )}\n    </StyledImageGallery>\n  );\n}\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n  searchValue: PropTypes.string,\n};\n","import { useEffect, useState } from 'react';\n// import PropTypes from 'prop-types';\nimport API from 'services';\nimport MoviesGallery from 'components/MoviesGallery';\nimport Loader from 'components/Loader';\n\nexport default function Home() {\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [status, setStatus] = useState(API.IDLE);\n\n  useEffect(() => {\n    async function getPopularMovies() {\n      setStatus(API.PENDING);\n      try {\n        const data = await API.getMovieTrend();\n        setPopularMovies(pS => [...pS, ...data.results]);\n        setStatus(API.RESOLVED);\n        // toast.info('Everything is loaded');\n      } catch (error) {\n        setStatus(API.REJECTED);\n        // toast.error('oops :( Something wrong, try again');\n      }\n    }\n    getPopularMovies();\n  }, []);\n\n  return (\n    <>\n      {status === API.PENDING && <Loader />}\n      {popularMovies.length > 0 && <MoviesGallery movies={popularMovies} />}\n    </>\n  );\n}\n\n// Home.propTypes = {};\n"],"names":["StyledMoviesGalleryItem","styled","MoviesItem","MoviesGalleryItem","poster_path","title","width","alt","src","loading","StyledImageGallery","MoviesGallery","movies","searchValue","location","useLocation","map","idx","id","overview","vote_average","genre_ids","to","state","from","search","Home","useState","popularMovies","setPopularMovies","API","status","setStatus","useEffect","data","pS","results","getPopularMovies","Loader","length"],"sourceRoot":""}