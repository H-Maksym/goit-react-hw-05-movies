{"version":3,"file":"static/js/Home.7d97664d.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/MoviesGallery/MoviesGalleryItem/MoviesGalleryItem.styled.js","components/MoviesGallery/MoviesGalleryItem/MoviesGalleryItem.js","components/MoviesGallery/MoviesGallery.styled.js","components/MoviesGallery/MoviesGallery.js","pages/Home/Home.js","services/themoviedbApiService.js"],"sourcesContent":["import { Circles } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <Circles\n      height=\"150\"\n      width=\"150\"\n      color=\" #3f51b5\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{\n        position: 'fixed',\n        bottom: '50%',\n        left: '50%',\n        transform: 'translate(-50%,-50%)',\n        zIndex: '100',\n      }}\n      visible={true}\n    />\n  );\n}\n","import styled from 'styled-components';\n\nexport const StyledMoviesGalleryItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const MoviesItem = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n`;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport {\n  StyledMoviesGalleryItem,\n  MoviesItem,\n} from './MoviesGalleryItem.styled';\n// import Modal from 'components/Modal';\n// import InnerModal from 'components/InnerModal';\n// import useToggleModal from 'hooks/toggleModal/';\n\nexport default function MoviesGalleryItem({ poster_path, title }) {\n  // const { isOpen, openModal, closeModal, handleKeyDown, handleBackdropClick } =\n  // useToggleModal(false);\n\n  return (\n    <>\n      <StyledMoviesGalleryItem>\n        <MoviesItem\n          width=\"342px\"\n          alt={title}\n          src={`https://image.tmdb.org/t/p/w342/${\n            poster_path === null\n              ? 'h5oGodvcoq8cyIDTy79yKn4qbey.jpg'\n              : poster_path\n          }`}\n          loading=\"lazy\"\n        />\n        <span>{title}</span>\n        {/* <br />\n        <span>{vote_average}</span>\n        <br />\n        <span>{genre_ids}</span>\n        <br />\n        <span>{overview}</span>\n        <br /> */}\n      </StyledMoviesGalleryItem>\n\n      {/* {isOpen && (\n        <Modal\n          handleBackdropClick={handleBackdropClick}\n          handleKeyDown={handleKeyDown}\n          closeModal={closeModal}\n        >\n          <InnerModal\n            largeImageURL={`https://image.tmdb.org/t/p/w780/${\n              backdrop_path === null\n                ? '/h5oGodvcoq8cyIDTy79yKn4qbey.jpg'\n                : backdrop_path\n            }`}\n          />\n        </Modal>\n      )} */}\n    </>\n  );\n}\n\n// MoviesGalleryItem.propTypes = {\n//   // id: PropTypes.string.isRequired,\n//   // name: PropTypes.string.isRequired,\n//   // number: PropTypes.string.isRequired,\n//   onOpenModal: PropTypes.func,\n// };\n","import styled from 'styled-components';\n\nexport const StyledImageGallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(185px, 1fr));\n  grid-gap: 40px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { React } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MoviesGalleryItem from 'components/MoviesGallery/MoviesGalleryItem';\nimport { StyledImageGallery } from './MoviesGallery.styled';\n\nexport default function MoviesGallery({ movies }) {\n  const location = useLocation();\n  return (\n    <StyledImageGallery>\n      {movies.map(\n        (\n          { id, poster_path, title, overview, vote_average, genre_ids },\n          idx\n        ) => {\n          return (\n            <Link key={idx} to={`/movies/${id}`} state={{ from: location }}>\n              <MoviesGalleryItem\n                poster_path={poster_path}\n                title={title}\n                overview={overview}\n                vote_average={vote_average}\n                genre_ids={genre_ids}\n              />\n            </Link>\n          );\n        }\n      )}\n    </StyledImageGallery>\n  );\n}\n\nMoviesGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n};\n","import { useEffect, useState, useRef } from 'react';\n// import PropTypes from 'prop-types';\nimport API from 'services';\nimport MoviesGallery from 'components/MoviesGallery';\nimport Loader from 'components/Loader';\n\nexport default function Home() {\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [status, setStatus] = useState(API.IDLE);\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    async function getPopularMovies() {\n      setStatus(API.PENDING);\n      try {\n        const data = await API.getMovieTrend();\n        setPopularMovies(pS => [...pS, ...data.results]);\n        setStatus(API.RESOLVED);\n        // toast.info('Everything is loaded');\n      } catch (error) {\n        setStatus(API.REJECTED);\n        // toast.error('oops :( Something wrong, try again');\n      }\n    }\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    getPopularMovies();\n  }, []);\n\n  return (\n    <>\n      {status === API.PENDING && <Loader />}\n      {popularMovies.length > 0 && <MoviesGallery movies={popularMovies} />}\n    </>\n  );\n}\n\n// Home.propTypes = {};\n","// const axios = require('axios');\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd3bb769880d7129a875d091908f7afe1';\naxios.defaults.params = { api_key: API_KEY, language: 'en-US' };\n\nexport async function getSearchMovieResult(query = '', page = 1) {\n  const response = await axios.get(`search/movie?query=${query}&page=${page}`);\n  return response.data;\n}\n\nexport async function getMovieTrend() {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data;\n}\n\nexport async function getSearchMovieById(id) {\n  const response = await axios.get(`movie/${id}`);\n  return response.data;\n}\n\nexport async function getSearchCastsMovieById(id) {\n  const response = await axios.get(`movie/${id}/credits`);\n  return response.data;\n}\n\nexport async function getSearchReviewsMovieById(id) {\n  const response = await axios.get(`movie/${id}/reviews`);\n  return response.data;\n}\n\n// export async function getGenres() {\n//   const { data: genres } = await axios.get(`genre/movie/list`);\n//   return genres;\n// }\n\nconst API = {\n  getSearchMovieResult,\n  getMovieTrend,\n  getSearchMovieById,\n  getSearchCastsMovieById,\n  getSearchReviewsMovieById,\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  LOADED: 'loaded',\n  REJECTED: 'rejected',\n};\n\nexport default API;\n"],"names":["Loader","height","width","color","ariaLabel","wrapperStyle","position","bottom","left","transform","zIndex","visible","StyledMoviesGalleryItem","styled","MoviesItem","MoviesGalleryItem","poster_path","title","alt","src","loading","StyledImageGallery","MoviesGallery","movies","location","useLocation","map","idx","id","overview","vote_average","genre_ids","to","state","from","Home","useState","popularMovies","setPopularMovies","API","status","setStatus","isFirstRender","useRef","useEffect","data","pS","results","current","getPopularMovies","length","axios","query","page","response","api_key","language","getSearchMovieResult","getMovieTrend","getSearchMovieById","getSearchCastsMovieById","getSearchReviewsMovieById","IDLE","PENDING","RESOLVED","LOADED","REJECTED"],"sourceRoot":""}