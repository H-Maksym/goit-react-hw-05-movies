{"version":3,"file":"static/js/Movies.82d823ce.chunk.js","mappings":"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","sources":["components/Box/Box.js","components/MoviesGallery/MoviesGalleryItem/MoviesGalleryItem.styled.js","components/MoviesGallery/MoviesGalleryItem/MoviesGalleryItem.js","components/MoviesGallery/MoviesGallery.styled.js","components/MoviesGallery/MoviesGallery.js","components/SearchBar/Searchbar.styled.js","components/SearchBar/Searchbar.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","components/Button/Button.styled.js","components/Button/Button.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  position,\n  space,\n  layout,\n  flexbox,\n  color,\n  grid,\n  border,\n} from 'styled-system';\n\nconst Box = styled.div`\n  ${position};\n  ${space};\n  ${layout};\n  ${flexbox};\n  ${color};\n  ${grid};\n  ${border};\n`;\n\nexport default Box;\n","import styled from 'styled-components';\n\nexport const StyledMoviesGalleryItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const MoviesItem = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyledMoviesGalleryItem,\n  MoviesItem,\n} from './MoviesGalleryItem.styled';\n// import Modal from 'components/Modal';\n// import InnerModal from 'components/InnerModal';\n// import useToggleModal from 'hooks/toggleModal/';\n\nexport default function MoviesGalleryItem({ poster_path, title }) {\n  // const { isOpen, openModal, closeModal, handleKeyDown, handleBackdropClick } =\n  // useToggleModal(false);\n\n  return (\n    <>\n      <StyledMoviesGalleryItem>\n        <MoviesItem\n          width=\"342px\"\n          alt={title}\n          src={`https://image.tmdb.org/t/p/w342/${\n            poster_path === null\n              ? 'h5oGodvcoq8cyIDTy79yKn4qbey.jpg'\n              : poster_path\n          }`}\n          loading=\"lazy\"\n        />\n        <span>{title}</span>\n        {/* <br />\n        <span>{vote_average}</span>\n        <br />\n        <span>{genre_ids}</span>\n        <br />\n        <span>{overview}</span>\n        <br /> */}\n      </StyledMoviesGalleryItem>\n\n      {/* {isOpen && (\n        <Modal\n          handleBackdropClick={handleBackdropClick}\n          handleKeyDown={handleKeyDown}\n          closeModal={closeModal}\n        >\n          <InnerModal\n            largeImageURL={`https://image.tmdb.org/t/p/w780/${\n              backdrop_path === null\n                ? '/h5oGodvcoq8cyIDTy79yKn4qbey.jpg'\n                : backdrop_path\n            }`}\n          />\n        </Modal>\n      )} */}\n    </>\n  );\n}\n\nMoviesGalleryItem.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  // number: PropTypes.string.isRequired,\n  // onOpenModal: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const StyledImageGallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(185px, 1fr));\n  grid-gap: 40px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { React } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MoviesGalleryItem from 'components/MoviesGallery/MoviesGalleryItem';\nimport { StyledImageGallery } from './MoviesGallery.styled';\n\nexport default function MoviesGallery({ movies, searchValue /* , page  */ }) {\n  const location = useLocation();\n  return (\n    <StyledImageGallery>\n      {movies.map(\n        (\n          { id, poster_path, title, overview, vote_average, genre_ids },\n          idx\n        ) => {\n          return (\n            <Link\n              key={idx}\n              to={`/movies/${id}`}\n              state={{ from: location, search: searchValue /* , page: page */ }}\n            >\n              <MoviesGalleryItem\n                poster_path={poster_path}\n                title={title}\n                overview={overview}\n                vote_average={vote_average}\n                genre_ids={genre_ids}\n              />\n            </Link>\n          );\n        }\n      )}\n    </StyledImageGallery>\n  );\n}\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n  searchValue: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  margin-bottom: 10px;\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: ${p => `${p.theme.space[6]}px`};\n  /* padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px; */\n  color: #fff;\n  /* background-color: orange; */\n  /* box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); */\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledSearchBar } from './Searchbar.styled';\n\nexport default function SearchBar({ children }) {\n  return <StyledSearchBar>{children}</StyledSearchBar>;\n}\n\nSearchBar.propTypes = {\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  border-radius: 15px;\n  border-color: orange;\n`;\n\nexport const StyledFilterInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const StyledFilterLabel = styled.label`\n  /* position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${p => p.theme.colors.form.formText};\n  font-size: ${p => p.theme.fontSizes.xl};\n  line-height: ${p => p.theme.lineHeights.form};\n  text-transform: ${p => p.theme.textTransform.cap};\n  font-weight: ${p => p.theme.fontWeights.medium}; */\n`;\n/* export const StyledSearchButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`; */\n\nexport const StyledSearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  color: orange;\n\n  background-color: initial;\n  /* background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg'); */\n  /* background-size: 40%; */\n  /* background-repeat: no-repeat; */\n  /* background-position: center; */\n  /* opacity: 0.6; */\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    color: #2ee59d;\n    /* background-color: #2ee59d; */\n    /* opacity: 1; */\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  // StyledFilterLabel,\n  StyledFilterInput,\n  StyledForm,\n  StyledSearchButton,\n  // StyledSearchButtonLabel,\n} from './SearchForm.styled';\nimport { BsSearch } from 'react-icons/bs';\n\n// import Box from 'components/Box';\n\nexport default function SearchForm({ onClick }) {\n  return (\n    <StyledForm onSubmit={onClick}>\n      <StyledSearchButton type=\"submit\" aria-label=\"search button\">\n        <BsSearch size=\"32px\" />\n      </StyledSearchButton>\n\n      <StyledFilterInput\n        name=\"query\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        // value={searchValue}\n        // onClick={this.handleValueChange}\n      />\n    </StyledForm>\n  );\n}\n\nSearchForm.propTypes = {\n  onClick: PropTypes.func,\n};\n","import styled from 'styled-components';\n\n// export const StyledButton = styled.button`\n//   padding: ${p => `${p.theme.space[3]}px`};\n//   min-width: ${p => `${p.theme.space[7]}px`};\n//   text-transform: ${p => p.theme.textTransform.cap};\n//   font-size: ${p => p.theme.fontSizes.m};\n//   font-weight: ${p => p.theme.fontWeights.semiBold};\n//   line-height: ${p => p.theme.lineHeights.form};\n//   letter-spacing: ${p => p.theme.letterSpacing.m};\n//   color: ${p => p.theme.colors.button.text};\n//   background-color: ${p => p.theme.colors.button.primaryBtnBackground};\n//   border: ${p => {\n//     if (p.type === 'submit') {\n//       return p.theme.borders.normal + p.theme.colors.button.btnShadow;\n//     } else {\n//       return p.theme.borders.none;\n//     }\n//   }};\n\n//   border-radius: ${p => p.theme.radii.xl};\n\n//   box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n//   transition: all 0.3s ease 0s;\n//   outline: ${p => p.theme.borders.none};\n\n//   :hover:not(:disabled) {\n//     background-color: ${p => p.theme.colors.button.accentBtnBackground};\n//     box-shadow: 0px 15px 20px rgba(46, 229, 157, 0.4);\n//     color: ${p => p.theme.colors.white};\n//     transform: translateY(${p => ` ${p.theme.space[3] * -1}px`});\n//   }\n// `;\n\nexport const StyledButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: orange;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  :hover,\n  :focus {\n    background-color: orangered;\n  }\n`;\n","import React from 'react';\nimport { StyledButton } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nexport default function Button({\n  type = 'button',\n  id,\n  disabled = false,\n  onClick,\n  children,\n}) {\n  return (\n    <StyledButton type={type} disabled={disabled} onClick={onClick} id={id}>\n      {children}\n    </StyledButton>\n  );\n}\n\nButton.propTypes = {\n  type: PropTypes.string,\n  id: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.node.isRequired,\n};\n","import { useEffect, useState } from 'react';\n\n// import PropTypes from 'prop-types';\n\nimport API from 'services';\nimport MoviesGallery from 'components/MoviesGallery';\nimport Loader from 'components/Loader';\nimport SearchBar from 'components/SearchBar';\nimport SearchForm from 'components/SearchForm';\nimport Box from 'components/Box';\nimport Button from 'components/Button';\n\nimport { toastConfigs } from 'config/notifyConfig';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useLocation } from 'react-router-dom';\n\nexport default function Movies() {\n  const location = useLocation();\n  const defaultSearchValue = location.search?.replace(/\\?query=/, '');\n  // const defaultPageValue = location.search?.replace(/\\?query=[a-z]+&page=/, '');\n\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchValue, setSearchValue] = useState(defaultSearchValue || '');\n  const [page, setPage] = useState(1);\n  const [totalMovies, setTotalMovies] = useState(0);\n  const [status, setStatus] = useState(API.IDLE);\n\n  useEffect(() => {\n    if (searchValue === '') {\n      return;\n    }\n\n    async function getSearchMovies() {\n      setStatus(API.PENDING);\n\n      try {\n        const data = await API.getSearchMovieResult(searchValue, page);\n\n        if (page === 1) {\n          if (data.total_results === 0) {\n            toast.info(\n              `Nothing was found for your query - \"${searchValue}\"`,\n              toastConfigs\n            );\n            setStatus(API.RESOLVED);\n            return;\n          }\n          setTotalMovies(data.total_results);\n          toast.success(`${data.total_results} films were found`, toastConfigs);\n        }\n\n        !totalMovies && setTotalMovies(data.total_results);\n\n        setSearchMovies(pS => [...pS, ...data.results]);\n        setStatus(API.RESOLVED);\n\n        if (data.results.length < 20) {\n          setStatus(API.LOADED);\n          toast.info('Everything is loaded', toastConfigs);\n        }\n      } catch (error) {\n        setStatus(API.REJECTED);\n        toast.error('oops :( Something wrong, try again', toastConfigs);\n      }\n    }\n    getSearchMovies();\n    // location.search = '';\n    // eslint-disable-next-line\n  }, [searchValue, page]);\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    const searchValueInput = e.target.elements.query.value;\n\n    //componentShouldUpdate()\n    if (searchValueInput.trim() !== searchValue || page !== 1) {\n      setSearchValue(searchValueInput);\n      setPage(1);\n      // setSearchMovies([]);\n      setTotalMovies(0);\n    }\n\n    e.target.reset();\n  }\n\n  function loadMore() {\n    setPage(pS => pS + 1);\n  }\n\n  return (\n    <>\n      <ToastContainer />\n      <SearchBar>\n        <SearchForm onClick={handleFormSubmit} />\n      </SearchBar>\n      {status === API.PENDING && <Loader />}\n      {searchMovies.length > 0 && (\n        <>\n          <MoviesGallery\n            movies={searchMovies}\n            searchValue={searchValue}\n            // page={page}\n          />\n          {searchMovies.length <= totalMovies && status !== API.LOADED && (\n            <Box py=\"20px\" display=\"flex\" justifyContent=\"center\">\n              <Button onClick={loadMore}>Load more</Button>\n            </Box>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\n// Movies.propTypes = {};\n"],"names":["styled","position","space","layout","flexbox","color","grid","border","StyledMoviesGalleryItem","MoviesItem","MoviesGalleryItem","poster_path","title","width","alt","src","loading","StyledImageGallery","MoviesGallery","movies","searchValue","location","useLocation","map","idx","id","overview","vote_average","genre_ids","to","state","from","search","StyledSearchBar","p","theme","SearchBar","children","StyledForm","StyledFilterInput","StyledSearchButton","colors","form","formText","fontSizes","xl","lineHeights","textTransform","cap","fontWeights","medium","SearchForm","onClick","onSubmit","type","size","name","autoComplete","autoFocus","placeholder","StyledButton","Button","disabled","Movies","defaultSearchValue","replace","useState","searchMovies","setSearchMovies","setSearchValue","page","setPage","totalMovies","setTotalMovies","API","status","setStatus","useEffect","data","total_results","toast","toastConfigs","pS","results","length","getSearchMovies","e","preventDefault","searchValueInput","target","elements","query","value","trim","reset","Loader","Box","py","display","justifyContent"],"sourceRoot":""}